import { useUI, useUser } from '../lib/state';
import { useEffect } from 'react';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç localStorage –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
export default function StateResetter() {
  const { setShowUserConfig } = useUI();
  const { setName, setInfo } = useUser();
  
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const shouldReset = localStorage.getItem('state-reset-flag') !== 'completed';
    
    if (shouldReset) {
      console.log('üîÑ Resetting state...');
      
      // –û—á–∏—â–∞–µ–º Zustand localStorage
      const keys = Object.keys(localStorage);
      const zustandKeys = keys.filter(key => 
        key.includes('ui-storage') || 
        key.includes('user-storage') || 
        key.includes('agent-storage')
      );
      
      zustandKeys.forEach(key => {
        localStorage.removeItem(key);
        console.log(`Removed ${key}`);
      });
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      setShowUserConfig(false);
      setName('–ì–æ—Å—Ç—å');
      setInfo('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å SDH Global AI Assistant');
      
      // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ —Å–±—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω
      localStorage.setItem('state-reset-flag', 'completed');
      
      console.log('‚úÖ State reset completed');
    }
  }, [setShowUserConfig, setName, setInfo]);
  
  return null; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç
}
